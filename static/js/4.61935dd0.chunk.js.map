{"version":3,"sources":["data/blogEntries.js","components/shared/CodeSnippet.tsx","components/blog/BlogEntry.tsx","components/blog/BlogCategorySelect.tsx","components/blog/BlogSortOrderSelect.tsx","routes/Blog.tsx"],"names":["blogEntries","id","categories","date","title","body","code","CodeSnippet","language","style","a11yDark","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","BlogEntry","React","Card","CardHeader","avatar","Avatar","sx","bgcolor","green","subheader","Stack","direction","spacing","map","category","Chip","color","label","startCase","CardContent","Typography","variant","CardActions","disableSpacing","BlogCategorySelect","setCategories","ToggleButtonGroup","size","value","onChange","e","ToggleButton","BlogSortOrderSelect","sortOrder","setSortOrder","FormControl","InputLabel","Select","target","MenuItem","disabled","Blog","useState","setBlogEntries","useEffect","newBlogEntries","cloneDeep","blogEntriesData","filter","be","some","c","includes","reverse","Grid","container","item","xs","alignItems","blogEntry"],"mappings":"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","file":"static/js/4.61935dd0.chunk.js","sourcesContent":["const blogEntries = [\n  {\n    id: 1,\n    categories: [\"frontEnd\", \"javaScript\"],\n    date: \"10/24/21\",\n    title: \"Create React App\",\n    body: \"This application was built by following the Create React App guide found here https://create-react-app.dev/\",\n  },\n  {\n    id: 2,\n    categories: [\"hosting\"],\n    date: \"\",\n    title: \"Hosting with Digital Ocean\",\n    body: `I wanted to be able to show this project off and easily deploy changes.  I was already familiar Digital Ocean's droplets, but saw they introduced \"Apps\" that make it easy to deploy code without needing to manage the server.`,\n  },\n  {\n    id: 3,\n    categories: [\"javaScript\"],\n    date: \"10/24/24\",\n    title: \"Code Snippets\",\n    body: \"I wanted to be able to show code examples, so I added the react-syntax-highlighter package to this project and created a wrapper component to be used throughout.\",\n    code: `\n// syntax highlighter\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\ninterface CodeSnippetProps {\n  code: string;\n}\n\nconst CodeSnippet = ({ code }: CodeSnippetProps) => {\n  return (\n    <SyntaxHighlighter language=\"javascript\" style={a11yDark}>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeSnippet;\n`,\n  },\n];\n\nexport default blogEntries;\n","// syntax highlighter\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\ninterface CodeSnippetProps {\n  code: string;\n}\n\nconst CodeSnippet = ({ code }: CodeSnippetProps) => {\n  return (\n    <SyntaxHighlighter language=\"javascript\" style={a11yDark}>\n      {code}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeSnippet;\n","import * as React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { green } from \"@mui/material/colors\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\n\n// utils\nimport { startCase } from \"lodash\";\n\n// dd\nimport CodeSnippet from \"../shared/CodeSnippet\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\ninterface BlogEntryProps {\n  id: number;\n  categories: string[];\n  date: string;\n  title: string;\n  body: string;\n  code?: string;\n}\n\nexport default function BlogEntry({\n  id,\n  categories,\n  date,\n  title,\n  body,\n  code,\n}: BlogEntryProps) {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar sx={{ bgcolor: green[500] }}>DD</Avatar>}\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title={title}\n        subheader={\n          <>\n            {date}\n            <Stack direction=\"row\" spacing={1}>\n              {categories.map((category) => {\n                return (\n                  <Chip\n                    color=\"info\"\n                    key={category}\n                    label={startCase(category)}\n                  />\n                );\n              })}\n            </Stack>\n          </>\n        }\n      />\n      {/* <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image=\"/static/images/cards/paella.jpg\"\n        alt=\"Paella dish\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {body}\n        </Typography>\n        {code && <CodeSnippet code={code} />}\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        {/* <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore> */}\n      </CardActions>\n      {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n            set aside for 10 minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\n            over medium-high heat. Add chicken, shrimp and chorizo, and cook,\n            stirring occasionally until lightly browned, 6 to 8 minutes.\n            Transfer shrimp to a large plate and set aside, leaving chicken and\n            chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes,\n            onion, salt and pepper, and cook, stirring often until thickened and\n            fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2\n            cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and\n            peppers, and cook without stirring, until most of the liquid is\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\n            shrimp and mussels, tucking them down into the rice, and cook again\n            without stirring, until mussels have opened and rice is just tender,\n            5 to 7 minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then\n            serve.\n          </Typography>\n        </CardContent>\n      </Collapse> */}\n    </Card>\n  );\n}\n","// mui\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\n\ninterface BlogCategorySelectProps {\n  categories: string[];\n  setCategories: (categories: string[]) => void;\n}\n\nconst BlogCategorySelect = ({\n  categories,\n  setCategories,\n}: BlogCategorySelectProps) => {\n  return (\n    <ToggleButtonGroup\n      size=\"small\"\n      color=\"info\"\n      value={categories}\n      onChange={(e, categories) => {\n        setCategories(categories);\n      }}\n    >\n      <ToggleButton value=\"frontEnd\">Front End</ToggleButton>\n      <ToggleButton value=\"backEnd\">Back End</ToggleButton>\n      <ToggleButton value=\"hosting\">Hosting</ToggleButton>\n      <ToggleButton value=\"javaScript\">JavaScript</ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nexport default BlogCategorySelect;\n","// mui\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\ninterface BlogSortOrderSelectProps {\n  sortOrder: string;\n  setSortOrder: (sortOrder: string) => void;\n}\n\nconst BlogSortOrderSelect = ({\n  sortOrder,\n  setSortOrder,\n}: BlogSortOrderSelectProps) => {\n  return (\n    <FormControl>\n      <InputLabel>Sort by</InputLabel>\n      <Select\n        size=\"small\"\n        color=\"info\"\n        value={sortOrder}\n        onChange={(e) => {\n          setSortOrder(e.target.value);\n        }}\n      >\n        <MenuItem value=\"newestFirst\">Newest First</MenuItem>\n        <MenuItem value=\"oldestFirst\">Oldest First</MenuItem>\n        <MenuItem disabled value=\"featured\">\n          Featured\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default BlogSortOrderSelect;\n","// react\nimport { useEffect, useState } from \"react\";\n// mui\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n// dd\nimport blogEntriesData from \"../data/blogEntries\";\nimport BlogEntry from \"../components/blog/BlogEntry\";\nimport BlogCategorySelect from \"../components/blog/BlogCategorySelect\";\nimport BlogSortOrderSelect from \"../components/blog/BlogSortOrderSelect\";\n// utils\nimport { cloneDeep } from \"lodash\";\n\nconst Blog = () => {\n  const [blogEntries, setBlogEntries] = useState<\n    {\n      id: number;\n      categories: string[];\n      date: string;\n      title: string;\n      body: string;\n      code?: string;\n    }[]\n  >([]);\n  const [sortOrder, setSortOrder] = useState(\"newestFirst\");\n  const [categories, setCategories] = useState([\n    \"frontEnd\",\n    \"backEnd\",\n    \"hosting\",\n    \"javaScript\",\n  ]);\n\n  useEffect(() => {\n    let newBlogEntries = cloneDeep(blogEntriesData);\n    // apply filter\n    newBlogEntries = newBlogEntries.filter((be) =>\n      be.categories.some((c) => categories.includes(c))\n    );\n    // apply sort\n    if (sortOrder === \"newestFirst\") {\n      newBlogEntries = newBlogEntries.reverse();\n    }\n    setBlogEntries(newBlogEntries);\n  }, [sortOrder, categories]);\n\n  return (\n    <>\n      {/* <div>\n        {`\n      Steps followed to setup this personal portfolio:\n      1. followed create react app as a starter https://create-react-app.dev/ using the type script template chose to use npm\n      2. hosted with digital ocean apps which easily wraps this app in a contianer and created a yaml file for you https://www.digitalocean.com/ with automatic deploy on commit to main branch\n      3. added react router for code splitting\n      4. added mui v5 didn't use styled-components\n      5. added theme provider\n\n      TODO:\n      1. add more lint rules\n      2. configure prettier\n      3. enforce tests and lint rules with husky\n      4. add material ui\n      5. show some data fetching\n      6. add .env variable\n      7. add / fix unit tests on github / site\n      8. test out emotion instead of jss\n      9. mui theme - try theme creator?\n      10. custom hook for \n      11. wire up share\n      12. wire up <3\n      13. move todo list\n      `}\n      </div> */}\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item>\n              <BlogSortOrderSelect\n                sortOrder={sortOrder}\n                setSortOrder={setSortOrder}\n              />\n            </Grid>\n            <Grid item>\n              <BlogCategorySelect\n                categories={categories}\n                setCategories={setCategories}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        {blogEntries.map((blogEntry) => {\n          return (\n            <Grid key={blogEntry.id} item xs={12}>\n              <BlogEntry\n                id={blogEntry.id}\n                categories={blogEntry.categories}\n                date={blogEntry.date}\n                title={blogEntry.title}\n                body={blogEntry.body}\n                code={blogEntry.code}\n              ></BlogEntry>\n            </Grid>\n          );\n        })}\n        {/* <Grid item xs={12}>\n          <Box textAlign=\"center\">\n            <Button color=\"primary\" onClick={() => {}}>\n              Load More...\n            </Button>\n          </Box>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}